module.exports = function(grunt) {

  // Project configuration.
  grunt.initConfig({
    pkg: grunt.file.readJSON('package.json'),
    uglify: {
      build:{
      	options:{
		preserveComments:'some',
		mangle:true,
	//	mangleProperties:true,
		reserveDOMCache:true
	},
      	files:[{
		expand:true,
		cwd:'src/',
		src:'**/*.js',
		dest:'build/scripts',
		ext:'.min.js'
	}]
      }
    },
    jshint:{
    	all:['src/**/*.js']
    },
    cssmin:{
    	target:{
		files:{
			'build/styles/common.css':['src/styles/test1.css','src/styles/test2.css']
		}
	}
    },

    //minify HTML code
      htmlmin: {
    dist: {
      options: {
		removeRedundantAttributes: true,
		collapseWhitespace: true,
		minifyJS:true,
		minifyCSS:true,
		conservativeCollapse:true
      },
      files: {
        'build/index.html': 'src/index.html',
      }
    }
  },
 
    copy:{
    	main:{
		files:[
			{expand:true,
			 src:['src/README'],
			 dest:'build/',
			 filter:'isFile'
			}
		]
	}
    },

    imagemin:{
    	dynamic:{
		options:{
			optimizationLevel:7
		},
		files:[{
			expand:true,
			cwd:'src/srcimages',
			src:['**/*.{png,jpg,gif}'],
			dest:'/home/rocker/vhost/ad/suoping/static/lock/images/<%= pkg.name %>/'
			//这里要改
		}]
	}
    },

    watch:{
    	test:{
		files:'src/srcimages/**/*.{jpg,png,gif}',
		tasks:['images']
	}
    },

    clean:{
    	test:{
		src:['src/tempfile','!src/keepthis']
	}
    },

    replace:{
    	test:{
		src:['src/*.html'],
		overwrite:true,	
		replacements:[{
			from:'srcimages',
			to:'http://w.qiandeer.com/qd/static/lock/images/<%= pkg.name %>'
		}]
	}
    }
   	

  });

  // Load the plugin that provides the "uglify" task.
  grunt.loadNpmTasks('grunt-contrib-uglify');
  grunt.loadNpmTasks('grunt-contrib-jshint');
  grunt.loadNpmTasks('grunt-contrib-cssmin');
  grunt.loadNpmTasks('grunt-contrib-htmlmin');
  grunt.loadNpmTasks('grunt-contrib-copy');
  grunt.loadNpmTasks('grunt-contrib-watch');
  grunt.loadNpmTasks('grunt-contrib-imagemin');
  grunt.loadNpmTasks('grunt-text-replace');
  grunt.loadNpmTasks('grunt-contrib-clean');
  // Default task(s).
  grunt.registerTask('default', ['replace','jshint','uglify:build','cssmin','htmlmin','copy','clean','watch']);
  grunt.registerTask('images', ['imagemin']);

};
